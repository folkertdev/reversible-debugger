global type G = 
        A -> V: <title>.V -> {A, B} : <price>.A -> B : <share>.
            B -> {A, V} : <OK>.
            B -> C: <share>. B -> C : <thunk>.
            B -> V : <address>. V -> B : <date>. end

type alias Alice = G at A
type alias Bob = G at B
type alias Carol = G at C
type alias Vendor = G at V

let d = port in

// A
thread Alice where
    let title = 42 in
        {send d title} ; 
        let price = {receive d} in 
            {send d share}; 
            let ok = {receive d} in 
                skip 
            end 
        end
    end
end;

// B
thread Bob where
    let ok = 1 in
        let address = 8 in
            let price = {receive d} in
                let share = {receive d} in
                    let remainder = proc { x } 
                            {send d address}; 
                            let date = {receive d} in 
                                skip 
                            end 
                         end
                    in
                        {send d ok}; 
                        {send d ok}; 
                        {send d share}; 
                        {send d remainder}
                    end
                end
            end
        end
    end
end;

thread Carol where
    let unit = 0 in
        let share = {receive d} in
            let remainder = {receive d} in
                {remainder unit}
            end
        end
    end
end;
    


thread Vendor where
    let price = 5 in 
        let date = 0 in
            let title = {receive d} in
                {send d price} ; 
                let ok = {receive d} in
                    let address = {receive d} in
                        {send d date}
                    end
                end
            end
        end
    end
end

// channel d
end
